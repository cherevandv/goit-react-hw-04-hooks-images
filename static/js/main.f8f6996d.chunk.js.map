{"version":3,"sources":["components/Searchbar/Searchbar.js","components/ImageGalleryItem/ImageGalleryItem.js","components/Button/Button.js","components/Modal/Modal.js","services/news-api.js","components/ImageGallery/ImageGallery.js","App.js","index.js"],"names":["Searchbar","onSubmit","useState","searchQuery","setSearchQuery","className","e","preventDefault","trim","toast","type","autoComplete","autoFocus","placeholder","value","onChange","target","toLowerCase","ImageGalleryItem","name","url","onClick","src","alt","Button","modalRoot","document","querySelector","Modal","image","onClose","useEffect","handleKeyDown","code","window","addEventListener","removeEventListener","createPortal","currentTarget","largeImageURL","tags","fetchImages","q","currentPage","fetch","then","res","json","data","hits","map","id","webformatURL","ImageGallery","query","images","setImages","setCurrentPage","activeIdx","setActiveIdx","status","setStatus","showModal","setShowModal","dataImages","length","error","scrollTo","top","documentElement","scrollHeight","behavior","catch","prevState","showImage","index","findIndex","color","height","width","prevPage","App","setQuery","autoClose","ReactDOM","render","StrictMode","getElementById"],"mappings":"+RAIe,SAASA,EAAT,GAAkC,IAAbC,EAAY,EAAZA,SAAY,EACRC,mBAAS,IADD,mBACvCC,EADuC,KAC1BC,EAD0B,KAgB9C,OACE,wBAAQC,UAAU,YAAlB,SACE,uBAAMA,UAAU,aAAaJ,SAXZ,SAAAK,GAEnB,GADAA,EAAEC,iBACyB,KAAvBJ,EAAYK,OACd,OAAOC,YAAM,yBAEfR,EAASE,GACTC,EAAe,KAKb,UACE,wBAAQM,KAAK,SAASL,UAAU,oBAAhC,SACE,sBAAMA,UAAU,0BAAhB,sBAEF,uBACEA,UAAU,mBACVK,KAAK,OACLC,aAAa,MACbC,WAAS,EACTC,YAAY,2BACZC,MAAOX,EACPY,SA1Bc,SAAAT,GACpBF,EAAeE,EAAEU,OAAOF,MAAMG,uB,WCanBC,MAnBf,YAAmD,IAAvBC,EAAsB,EAAtBA,KAAMC,EAAgB,EAAhBA,IAAKC,EAAW,EAAXA,QACrC,OACE,oBAAIhB,UAAU,mBAAd,SACE,qBACEiB,IAAKF,EACLG,IAAKJ,EACLd,UAAU,yBACVgB,QAASA,O,iBCPF,SAASG,EAAT,GAA8B,IAAZH,EAAW,EAAXA,QAC/B,OACE,wBAAQX,KAAK,SAASL,UAAU,SAASgB,QAASA,EAAlD,uBCAJ,IAAMI,EAAYC,SAASC,cAAc,eAE1B,SAASC,EAAT,GAAoC,IAAnBC,EAAkB,EAAlBA,MAAOC,EAAW,EAAXA,QACrCC,qBAAU,WACR,IAAMC,EAAgB,SAAA1B,GACL,WAAXA,EAAE2B,MACJH,KAKJ,OAFAI,OAAOC,iBAAiB,UAAWH,GAE5B,WACLE,OAAOE,oBAAoB,UAAWJ,MAEvC,IAQH,OAAOK,uBACL,qBAAKhC,UAAU,UAAUgB,QAPC,SAAAf,GACtBA,EAAEU,SAAWV,EAAEgC,eACjBR,KAKF,SACE,qBAAKzB,UAAU,QAAf,SACE,qBAAKiB,IAAKO,EAAMU,cAAehB,IAAKM,EAAMW,WAG9Cf,GC7BG,SAASgB,EAAYC,EAAGC,GAC7B,OAAOC,MAAM,GAAD,OAJE,2BAIF,cACMF,EADN,iBACgBC,EADhB,gBAHC,qCAGD,yDAGTE,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAG,GAAI,OACRA,EAAKC,KAAKC,KAAI,kBAAgD,CAC5DC,GADY,EAAGA,GAEfC,aAFY,EAAOA,aAGnBb,cAHY,EAAqBA,cAIjCC,KAJY,EAAoCA,YCAzC,SAASa,EAAT,GAAkC,IAAVC,EAAS,EAATA,MAAS,EAClBpD,mBAAS,IADS,mBACvCqD,EADuC,KAC/BC,EAD+B,OAERtD,mBAAS,GAFD,mBAEvCyC,EAFuC,KAE1Bc,EAF0B,OAGZvD,mBAAS,MAHG,mBAGvCwD,EAHuC,KAG5BC,EAH4B,OAIlBzD,mBAAS,QAJS,mBAIvC0D,EAJuC,KAI/BC,EAJ+B,OAKZ3D,oBAAS,GALG,mBAKvC4D,EALuC,KAK5BC,EAL4B,KAO9ChC,qBAAU,WACRyB,EAAU,IACVC,EAAe,GACfE,EAAa,MACbE,EAAU,WACVpB,EAAYa,EAAO,GAChBT,MAAK,SAAAmB,GACJR,EAAUQ,GACgB,IAAtBA,EAAWC,QACbxD,IAAMyD,MAAN,uBACAL,EAAU,UAEVA,EAAU,YACV3B,OAAOiC,SAAS,CACdC,IAAK1C,SAAS2C,gBAAgBC,aAC9BC,SAAU,eAIfC,OAAM,kBAAMX,EAAU,iBACxB,CAACP,IAEJvB,qBAAU,WACY,IAAhBY,IAGJkB,EAAU,WACVpB,EAAYa,EAAOX,GAChBE,MAAK,SAAAmB,GAAU,OAAIR,GAAU,SAAAiB,GAAS,4BAAQA,GAAR,YAAsBT,UAC5DnB,MAAK,WACJgB,EAAU,YACV3B,OAAOiC,SAAS,CACdC,IAAK1C,SAAS2C,gBAAgBC,aAC9BC,SAAU,cAGbC,OAAM,kBAAMX,EAAU,kBACxB,CAAClB,IAEJ,IAQM+B,EAAY,SAAApE,GAChB,IAAMqE,EAAQpB,EAAOqB,WACnB,SAAA/C,GAAK,OAAIA,EAAMuB,eAAiB9C,EAAEU,OAAOM,OAE3CqC,EAAagB,GACbZ,GAAa,IAGf,OACE,qCACc,aAAXH,GAAyBnD,IAAMyD,MAAN,iCAExB,oBAAI7D,UAAU,eAAd,SACGkD,EAAOL,KAAI,WAAyBC,GAAzB,IAAGX,EAAH,EAAGA,KAAMY,EAAT,EAASA,aAAT,OACV,cAAC,EAAD,CAEEjC,KAAMqB,EACNpB,IAAKgC,EACL/B,QAASqD,GAHJvB,QAQb,sBAAK9C,UAAU,YAAf,UACc,YAAXuD,GACC,cAAC,IAAD,CAAQlD,KAAK,YAAYmE,MAAM,UAAUC,OAAQ,GAAIC,MAAO,KAE7DxB,EAAOU,OAAS,GAAgB,aAAXL,GACpB,cAACpC,EAAD,CAAQH,QApCO,WACrBoC,GAAe,SAAAuB,GAAQ,OAAIA,EAAW,WAsCnClB,GAAa,cAAClC,EAAD,CAAOC,MAAO0B,EAAOG,GAAY5B,QAnC/B,WAClBiC,GAAa,SAAAD,GAAS,OAAKA,WCpDhB,SAASmB,IAAO,IAAD,EACF/E,mBAAS,IADP,mBACrBoD,EADqB,KACd4B,EADc,KAG5B,OACE,gCACE,cAAClF,EAAD,CAAWC,SAAUiF,IACrB,cAAC,IAAD,CAAgBC,UAAW,MAC1B7B,GAAS,cAACD,EAAD,CAAcC,MAAOA,OCTrC8B,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEF5D,SAAS6D,eAAe,W","file":"static/js/main.f8f6996d.chunk.js","sourcesContent":["import { useState } from 'react';\nimport { toast } from 'react-toastify';\nimport PropTypes from 'prop-types';\n\nexport default function Searchbar({ onSubmit }) {\n  const [searchQuery, setSearchQuery] = useState('');\n\n  const onInputChange = e => {\n    setSearchQuery(e.target.value.toLowerCase());\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (searchQuery.trim() === '') {\n      return toast('Enter some image name');\n    }\n    onSubmit(searchQuery);\n    setSearchQuery('');\n  };\n\n  return (\n    <header className=\"Searchbar\">\n      <form className=\"SearchForm\" onSubmit={handleSubmit}>\n        <button type=\"submit\" className=\"SearchForm-button\">\n          <span className=\"SearchForm-button-label\">Search</span>\n        </button>\n        <input\n          className=\"SearchForm-input\"\n          type=\"text\"\n          autoComplete=\"off\"\n          autoFocus\n          placeholder=\"Search images and photos\"\n          value={searchQuery}\n          onChange={onInputChange}\n        />\n      </form>\n    </header>\n  );\n}\n\nSearchbar.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n","import PropTypes from 'prop-types';\n\nfunction ImageGalleryItem({ name, url, onClick }) {\n  return (\n    <li className=\"ImageGalleryItem\">\n      <img\n        src={url}\n        alt={name}\n        className=\"ImageGalleryItem-image\"\n        onClick={onClick}\n      />\n    </li>\n  );\n}\n\nImageGalleryItem.propTypes = {\n  name: PropTypes.string.isRequired,\n  url: PropTypes.string.isRequired,\n  onClick: PropTypes.func.isRequired,\n};\n\nexport default ImageGalleryItem;\n","import PropTypes from 'prop-types';\n\nexport default function Button({ onClick }) {\n  return (\n    <button type=\"button\" className=\"Button\" onClick={onClick}>\n      Load more\n    </button>\n  );\n}\n\nButton.propTypes = {\n  onClick: PropTypes.func.isRequired,\n};\n","import { useEffect } from 'react';\nimport { createPortal } from 'react-dom';\nimport PropTypes from 'prop-types';\n\nconst modalRoot = document.querySelector('#modal-root');\n\nexport default function Modal({ image, onClose }) {\n  useEffect(() => {\n    const handleKeyDown = e => {\n      if (e.code === 'Escape') {\n        onClose();\n      }\n    };\n    window.addEventListener('keydown', handleKeyDown);\n\n    return () => {\n      window.removeEventListener('keydown', handleKeyDown);\n    };\n  }, []);\n\n  const handleBackdropClick = e => {\n    if (e.target === e.currentTarget) {\n      onClose();\n    }\n  };\n\n  return createPortal(\n    <div className=\"Overlay\" onClick={handleBackdropClick}>\n      <div className=\"Modal\">\n        <img src={image.largeImageURL} alt={image.tags} />\n      </div>\n    </div>,\n    modalRoot,\n  );\n}\n\nModal.propTypes = {\n  image: PropTypes.exact({\n    id: PropTypes.number,\n    webformatURL: PropTypes.string,\n    largeImageURL: PropTypes.string.isRequired,\n    tags: PropTypes.string.isRequired,\n  }),\n  onClose: PropTypes.func.isRequired,\n};\n","const baseUrl = 'https://pixabay.com/api/';\nconst APIkey = '19547883-c83eecf3fafc0cf8c7a25c2e3';\n\nexport function fetchImages(q, currentPage) {\n  return fetch(\n    `${baseUrl}?q=${q}&page=${currentPage}&key=${APIkey}&image_type=photo&orientation=horizontal&per_page=12`,\n  )\n    .then(res => res.json())\n    .then(data =>\n      data.hits.map(({ id, webformatURL, largeImageURL, tags }) => ({\n        id,\n        webformatURL,\n        largeImageURL,\n        tags,\n      })),\n    );\n}\n","import { useState, useEffect } from 'react';\nimport { toast } from 'react-toastify';\nimport ImageGalleryItem from '../ImageGalleryItem';\nimport Loader from 'react-loader-spinner';\nimport Button from '../Button';\nimport Modal from '../Modal';\nimport { fetchImages } from '../../services/news-api';\nimport PropTypes from 'prop-types';\n\nexport default function ImageGallery({ query }) {\n  const [images, setImages] = useState([]);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [activeIdx, setActiveIdx] = useState(null);\n  const [status, setStatus] = useState('idle');\n  const [showModal, setShowModal] = useState(false);\n\n  useEffect(() => {\n    setImages([]);\n    setCurrentPage(1);\n    setActiveIdx(null);\n    setStatus('pending');\n    fetchImages(query, 1)\n      .then(dataImages => {\n        setImages(dataImages);\n        if (dataImages.length === 0) {\n          toast.error(`No such name exists`);\n          setStatus('idle');\n        } else {\n          setStatus('resolved');\n          window.scrollTo({\n            top: document.documentElement.scrollHeight,\n            behavior: 'smooth',\n          });\n        }\n      })\n      .catch(() => setStatus('rejected'));\n  }, [query]);\n\n  useEffect(() => {\n    if (currentPage === 1) {\n      return;\n    }\n    setStatus('pending');\n    fetchImages(query, currentPage)\n      .then(dataImages => setImages(prevState => [...prevState, ...dataImages]))\n      .then(() => {\n        setStatus('resolved');\n        window.scrollTo({\n          top: document.documentElement.scrollHeight,\n          behavior: 'smooth',\n        });\n      })\n      .catch(() => setStatus('rejected'));\n  }, [currentPage]);\n\n  const handleLoadMore = () => {\n    setCurrentPage(prevPage => prevPage + 1);\n  };\n\n  const toggleModal = () => {\n    setShowModal(showModal => !showModal);\n  };\n\n  const showImage = e => {\n    const index = images.findIndex(\n      image => image.webformatURL === e.target.src,\n    );\n    setActiveIdx(index);\n    setShowModal(true);\n  };\n\n  return (\n    <>\n      {status === 'rejected' && toast.error(`oops ... something went wrong`)}\n      {\n        <ul className=\"ImageGallery\">\n          {images.map(({ tags, webformatURL }, id) => (\n            <ImageGalleryItem\n              key={id}\n              name={tags}\n              url={webformatURL}\n              onClick={showImage}\n            />\n          ))}\n        </ul>\n      }\n      <div className=\"container\">\n        {status === 'pending' && (\n          <Loader type=\"ThreeDots\" color=\"#00BFFF\" height={80} width={80} />\n        )}\n        {images.length > 0 && status === 'resolved' && (\n          <Button onClick={handleLoadMore} />\n        )}\n      </div>\n      {showModal && <Modal image={images[activeIdx]} onClose={toggleModal} />}\n    </>\n  );\n}\n\nImageGallery.propTypes = {\n  query: PropTypes.string.isRequired,\n};\n","import { useState } from 'react';\nimport { ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport './App.css';\nimport 'react-loader-spinner/dist/loader/css/react-spinner-loader.css';\nimport Searchbar from './components/Searchbar';\nimport ImageGallery from './components/ImageGallery';\n\nexport default function App() {\n  const [query, setQuery] = useState('');\n\n  return (\n    <div>\n      <Searchbar onSubmit={setQuery} />\n      <ToastContainer autoClose={3000} />\n      {query && <ImageGallery query={query} />}\n    </div>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'modern-normalize/modern-normalize.css';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}